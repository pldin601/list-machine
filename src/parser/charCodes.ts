export enum CharCode {
  NULL = 0x0,
  START_OF_HEADING = 0x1,
  START_OF_TEXT = 0x2,
  END_OF_TEXT = 0x3,
  END_OF_TRANSMISSION = 0x4,
  ENQUIRY = 0x5,
  ACKNOWLEDGE = 0x6,
  BELL = 0x7,
  BACKSPACE = 0x8,
  TAB = 0x9,
  LINE_FEED = 0xa,
  VERTICAL_TAB = 0xb,
  FORM_FEED = 0xc,
  CARRIAGE_RETURN = 0xd,
  SHIFT_OUT = 0xe,
  SHIFT_IN = 0xf,
  DATA_LINK_ESCAPE = 0x10,
  DEVICE_CONTROL_1 = 0x11,
  DEVICE_CONTROL_2 = 0x12,
  DEVICE_CONTROL_3 = 0x13,
  DEVICE_CONTROL_4 = 0x14,
  NEGATIVE_ACKNOWLEDGE = 0x15,
  SYNCHRONOUS_IDLE = 0x16,
  END_OF_TRANSMISSION_BLOCK = 0x17,
  CANCEL = 0x18,
  END_OF_MEDIUM = 0x19,
  SUBSTITUDE = 0x1a,
  ESCAPE = 0x1b,
  FILE_SEPARATOR = 0x1c,
  GROUP_SEPARATOR = 0x1d,
  RECORD_SEPARATOR = 0x1e,
  UNIT_SEPARATOR = 0x1f,
  SPACE = 0x20,
  DOUBLE_QUOTE = 0x22,
  APOSTROPHE = 0x27,
  LEFT_PAREN = 0x28,
  RIGHT_PAREN = 0x29,
  ASTERISK = 0x2a,
  SEMICOLON = 0x3b,
  LEFT_BRACKET = 0x5b,
  BACKSLASH = 0x5c,
  RIGHT_BRACKET = 0x5d,
}

const charCodeNames: { [code: number]: string } = {
  0x0: 'Null',
  0x1: 'StartOfHeading',
  0x2: 'StartOfText',
  0x3: 'EndOfText',
  0x4: 'EndOfTransmission',
  0x5: 'Enquiry',
  0x6: 'Acknowledge',
  0x7: 'Bell',
  0x8: 'Backspace',
  0x9: 'Tab',
  0xA: 'LineFeed',

  0xb: 'VerticalTab',
  0xc: 'FormFeed',
  0xd: 'CarriageReturn',
  0xe: 'ShiftOut',
  0xf: 'ShiftIn',
  0x10: 'DataLinkEscape',
  0x11: 'DeviceControl1',
  0x12: 'DeviceControl2',
  0x13: 'DeviceControl3',
  0x14: 'DeviceControl4',
  0x15: 'NegativeAcknowledge',
  0x16: 'SynchronousIdle',
  0x17: 'EndOfTransmissionBlock',
  0x18: 'Cancel',
  0x19: 'EndOfMedium',
  0x1a: 'Substitute',
  0x1b: 'Escape',
  0x1c: 'FileSeparator',
  0x1d: 'GroupSeparator',
  0x1e: 'RecordSeparator',
  0x1f: 'UnitSeparator',
  0x20: 'Space',
  0x22: 'DoubleQuote',
  0x27: 'Apostrophe',
  0x28: 'LeftParen',
  0x29: 'RightParen',
  0x2a: 'Asterisk',
  0x3b: 'Semicolon',
  0x5b: 'LeftBracket',
  0x5c: 'Backslash',
  0x5d: 'RightBracket',
};

export const getCharName = (charCode: number): string => {
  return charCode in charCodeNames ? charCodeNames[charCode] : String.fromCharCode(charCode);
};
